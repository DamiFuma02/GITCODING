boxplot(Y) + abline(h=modaY,col="red")
abline(h=modaY,col="red")
ggplot(FreqTable) + geom_boxplot(Y)
ggplot(FreqTable) + geom_boxplot(aes(Y))
ggplot(FreqTable) + geom_boxplot(aes(Y))
ggplot(FreqTable) + geom_boxplot(aes(y=Y))
boxplot(FreqTable)
boxplot(FreqTable$Y)
ggplot(data.frame(Y)) + geom_boxplot(aes(Y))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_line(aes(y=modaY))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(aes(modaY)) + geom_hline(aes(medianaY))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(aes(modaY))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(aes(Y,modaY))
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)  + geom_hline(yintercept = medianaY)
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)  + geom_hline(yintercept = medianaY,aes(color = "blue"))
install.packages("nycflights13")
(Scy = quantile(Y,0.75)-quantile(0.25))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
quantile(Y,0.75)
quantile(Y,c(0.25,0.5,0.75))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
quantile(Y,0.75)
quantile(Y,0.25)
# frequenze relative cumulate
(FreqRelCum = cumsum(
table(cut(Y,classIntervals))/length(Y)
))
FreqRelCum
#frequenze relative cumulate
(FreqRelCum=cumsum(table(Y)/length(Y)))
FreqRelCum
#frequenze relative cumulate
(FreqRelCum=   data.frame(cumsum(table(Y)/length(Y))))
FreqRelCum
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=Sy,Pn=cumsum(table(Y)/length(Y))))
FreqRelCum
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=sort(Sy),Pn=cumsum(table(Y)/length(Y))))
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=sort(Sy),Pn=cumsum(table(Y)/length(Y))))
FreqRelCum[FreqRelCum$Pn>=0.75,"Y"]
FreqRelCum[FreqRelCum$Pn>=0.75,"Y"][1] - FreqRelCum[FreqRelCum$Pn>=0.25,"Y"][1]
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
FreqAss = data.frame(nGuasti = c(0,1,2,3,4), FIAT = c(9,13,10,5,3), OPEL = c(33,20,6,1,0))
FreqAss
library("dplyr")
library("ggplot2")
FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3))
FreqOPEL = data.frame(nGuasti = c(0,1,2,3,4), f = c(33,20,6,1,0))
FreqOPEL
FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3))
FreqRelFIAT = FreqFIAT %>% mutate(pi=FreqFIAT$fi/sum(FreqFIAT$fi))
FreqRelFIAT
Sy_FIAT = c(0,1,2,3,4)   #Supporto di Y_FIAT ,
Sy_OPEL = c(0,1,2,3)
# tabella rappresentata in foto
FreqAss = data.frame(nGuasti = c(0,1,2,3,4), FIAT = c(9,13,10,5,3), OPEL = c(33,20,6,1,0))
FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3))
FreqRelFIAT = FreqFIAT %>% mutate(pi=fi/sum(fi))
sum(FreqRelFIAT$pi) == 1
FreqOPEL = data.frame(nGuasti = c(0,1,2,3,4), fi = c(33,20,6,1,0))
FreqRelOPEL = FreqFIAT %>% mutate(pi=fi/sum(fi))
sum(FreqRelOPEL$pi) == 1
ggplot(FreqFIAT) + geom_bar(aes(nGuasi,fi))
ggplot(FreqFIAT) + geom_bar(aes(nGuasti,fi))
ggplot(FreqFIAT) + geom_bar(aes(fi))
ggplot(FreqFIAT) + geom_bar(aes(nGuasti))
hist(FreqFIAT$nGuasti,FreqFIAT$fi)
hist(FreqFIAT$fi)
hist(FreqFIAT$nGuasti)
plot(FreqFIAT)
plot(table(FreqFIAT))
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi))
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,color="red"))
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
ggplot(FreqRelFIAT) + geom_col(aes(nGuasti,pi,fill="red"))
FreqAssCumFIAT = cumsum(FreqFIAT$fi)
FreqAssCumFIAT
FreqAssCumFIAT = cumsum(FreqFIAT)
FreqAssCumFIAT
FreqAssCumFIAT = cumsum(table(FreqFIAT$nGuasti))
FreqAssCumFIAT
table(FreqFIAT$nGuasti)
c(3)*3
c(3*3)
calcola = function(arr){
a = c()
for (i in 2:length(arr)){
a = append(a,arr[i]+arr[i-1])
}
return (a)
}
calcola(FreqFIAT$fi)
FreqFIAT$fi
a = c(2)
append(a,3)
calcola(FreqFIAT$fi)
calcola = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+arr[i-1])
}
return (a)
}
prova =calcola(FreqFIAT$fi)
prova
FreqFIAT$fi
calcola = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+a[i-1])
}
return (a)
}
prova =calcola(FreqFIAT$fi)
prova
FreqFIAT = FreqFIAT %>% mutate(Fi=calcola(fi))
FreqFIAT
ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ]
ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ]
(ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ])
(ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ])
FreqFIAT
(FreqFIAT = FreqFIAT %>% mutate(Fi=calcolaFreqCum(fi))    )
Sy_FIAT = c(0,1,2,3,4)   #Supporto di Y_FIAT ,
Sy_OPEL = c(0,1,2,3)
(FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3)))
# calcola le frequenze relative
(FreqFIAT = FreqFIAT %>% mutate(pi=fi/sum(fi)))
if (sum(FreqFIAT$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
# I DUE GRAFICI SONO ANALOGHI
ggplot(FreqFIAT) + geom_col(aes(nGuasti,pi,fill="red"))
# funzione per il calcolo delle frequenze cumulate assolute o relative
calcolaFreqCum = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+a[i-1])
}
return (a)
}
(FreqFIAT = FreqFIAT %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqFIAT = FreqFIAT %>% mutate(Pi=calcolaFreqCum(pi))    )
FreqOPEL = data.frame(nGuasti = c(0,1,2,3,4), fi = c(33,20,6,1,0))
# calcola le frequenze relative
FreqOPEL = FreqOPEL %>% mutate(pi=fi/sum(fi))
if (sum(FreqOPEL$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqOPEL) + geom_col(aes(nGuasti,fi,fill="red"))
(FreqOPEL = FreqOPEL  %>% mutate(Fi=calcolaFreqCum(fi))  )
(FreqOPEL = FreqOPEL  %>% mutate(Pi=calcolaFreqCum(pi))  )
(ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ])
(ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ][1])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ][1])
FreqFIAT
sum(1:2, 3:5)
calcolaMedia = function(valori,frequenze){
somma =0
for (i in 1:length(valori)){
somma = somma + (valori[i]*frequenze[i])
}
return (somma/sum(frequenze))
}
calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$fi)
calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi)
calcolaMedia = function(valori,frequenze){
somma =0
for (i in 1:length(valori)){
somma = somma + (valori[i]*frequenze[i])
}
return (somma)
}
calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi)
calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi)
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:sum(frequenze)){
somma = somma + (valori[i]-MediaFIAT)**2 *frequenze[i]
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
(MediaFIAT = calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi))
(MediaOPEL = calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi))
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:sum(frequenze)){
somma = somma + (valori[i]-MediaFIAT)**2 *frequenze[i]
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:sum(frequenze)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(MediaFIAT = calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi))
(MediaOPEL = calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi))
5**2
5**2*3
5**(2*3)
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:sum(frequenze)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
valori = FreqFIAT$nGuasti
frequenze = FreqFIAT$fi
somma = 0
for (i in 1:sum(frequenze)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
somma
i=1
somma = 0
somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:lenght(valori)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:length(valori)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
(VarianzaOPEL = calcolaVarianza(FreqOPEL$nGuasti,FreqOPEL$fi))
FreqOPEL
library("ggplot2")
library("dplyr")
library("ggplot2")
#vettore unidimensionale in quanto vi Ã¨ un'unica variabile di riferimento
Y = c(138,164,150,132,144,125,149,157,146,158,140,147,136,148,152,144,168,126,138,176,163,119,154,165,146,173,142,147,135,153,140,135,161,145,135,142,150,156,145,128)
(n=length(Y)) #numero di osservazioni totali
# SUPPORTO DI Y
(Sy=unique(Y))
# frequenze assolute per ogni valore del supporto
Fy = table(Y)
# frequenze relative per ogni valore del supporto
Py = table(Y)/length(Y)
FreqTable = data.frame(table(Y))
data.frame(cumsum(table(Y)))
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=sort(Sy),Pn=cumsum(table(Y)/length(Y))))
# ecdf() funzione di ripartizione empirica
plot(ecdf(Y),main=" ",xlab="X = Lunghezza Foglia [mm]", ylab="Y = Frequenze Relative Cumulate Pn(x)")
classIntervals=c(118,128,138,148,158,168,178)
# tabella delle frequenze assolute per le classi di valori
table(cut(Y,classIntervals))
# frequenza assolute cumulate
cumFreqAss = cumsum(
table(cut(Y,classIntervals))
)
#tabella frequenze relative
table(
cut(Y , classIntervals )
)/length(Y)
# frequenze relative cumulate
cumsum(
table(cut(Y,classIntervals))/length(Y)
)
# crea l'istogramma impostando le basi dell'asse X come le classi definite in precedenza
hist(Y,classIntervals,xlab = "Lunghezza Foglia [mm]",ylab = "Frequenza assoluta")
moda = function(v){
tmp = unique(v)
Sy[which.max(tabulate(match(v,tmp)) )]
}
(modaY=moda(Y))
(medianaY = median(Y))
# frequenze relative cumulate
freqRelCum = cumsum(table(Y)/length(Y))
quantile(Y,c(0.25,0.5,0.75))
median(Y) == quantile(Y,0.5)
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)  + geom_hline(yintercept = medianaY,aes(color = "blue"))
(dimRange = max(Y)-min(Y))
(range = c(min(Y),max(Y)))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
FreqRelCum[FreqRelCum$Pn>=0.75,"Y"][1] - FreqRelCum[FreqRelCum$Pn>=0.25,"Y"][1]
Sy_FIAT = c(0,1,2,3,4)   #Supporto di Y_FIAT ,
Sy_OPEL = c(0,1,2,3)
(FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3)))
# calcola le frequenze relative
(FreqFIAT = FreqFIAT %>% mutate(pi=fi/sum(fi)))
if (sum(FreqFIAT$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
# I DUE GRAFICI SONO ANALOGHI
ggplot(FreqFIAT) + geom_col(aes(nGuasti,pi,fill="red"))
# funzione per il calcolo delle frequenze cumulate assolute o relative
calcolaFreqCum = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+a[i-1])
}
return (a)
}
(FreqFIAT = FreqFIAT %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqFIAT = FreqFIAT %>% mutate(Pi=calcolaFreqCum(pi))    )
FreqOPEL = data.frame(nGuasti = c(0,1,2,3), fi = c(33,20,6,1))
# calcola le frequenze relative
FreqOPEL = FreqOPEL %>% mutate(pi=fi/sum(fi))
if (sum(FreqOPEL$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqOPEL) + geom_col(aes(nGuasti,fi,fill="red"))
(FreqOPEL = FreqOPEL  %>% mutate(Fi=calcolaFreqCum(fi))  )
(FreqOPEL = FreqOPEL  %>% mutate(Pi=calcolaFreqCum(pi))  )
(ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ])
(ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ][1])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ][1])
calcolaMedia = function(valori,frequenze){
somma =0
for (i in 1:length(valori)){
somma = somma + (valori[i]*frequenze[i])
}
return (somma)
}
(MediaFIAT = calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi))
(MediaOPEL = calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi))
calcolaVarianza = function(valori,frequenze){
somma = 0
for (i in 1:length(valori)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
FreqOPEL$nGuasti
valori = FreqOPEL$nGuasti
valori
FreqOPEL$fi
frequenze = FreqOPEL$fi
somma = 0
for (i in 1:length(valori)){
somma = somma + (((valori[i]-MediaFIAT)**2) *frequenze[i])
}
somma
(1/sum(frequenze)*somma)
sum(frequenze)
(VarianzaOPEL = calcolaVarianza(FreqOPEL$nGuasti,FreqOPEL$fi))
83/60
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi))
library("ggplot2")
library("dplyr")
library("ggplot2")
#vettore unidimensionale in quanto vi Ã¨ un'unica variabile di riferimento
Y = c(138,164,150,132,144,125,149,157,146,158,140,147,136,148,152,144,168,126,138,176,163,119,154,165,146,173,142,147,135,153,140,135,161,145,135,142,150,156,145,128)
(n=length(Y)) #numero di osservazioni totali
# SUPPORTO DI Y
(Sy=unique(Y))
# frequenze assolute per ogni valore del supporto
Fy = table(Y)
# frequenze relative per ogni valore del supporto
Py = table(Y)/length(Y)
FreqTable = data.frame(table(Y))
data.frame(cumsum(table(Y)))
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=sort(Sy),Pn=cumsum(table(Y)/length(Y))))
# ecdf() funzione di ripartizione empirica
plot(ecdf(Y),main=" ",xlab="X = Lunghezza Foglia [mm]", ylab="Y = Frequenze Relative Cumulate Pn(x)")
classIntervals=c(118,128,138,148,158,168,178)
# tabella delle frequenze assolute per le classi di valori
table(cut(Y,classIntervals))
# frequenza assolute cumulate
cumFreqAss = cumsum(
table(cut(Y,classIntervals))
)
#tabella frequenze relative
table(
cut(Y , classIntervals )
)/length(Y)
# frequenze relative cumulate
cumsum(
table(cut(Y,classIntervals))/length(Y)
)
# crea l'istogramma impostando le basi dell'asse X come le classi definite in precedenza
hist(Y,classIntervals,xlab = "Lunghezza Foglia [mm]",ylab = "Frequenza assoluta")
moda = function(v){
tmp = unique(v)
Sy[which.max(tabulate(match(v,tmp)) )]
}
(modaY=moda(Y))
(medianaY = median(Y))
# frequenze relative cumulate
freqRelCum = cumsum(table(Y)/length(Y))
quantile(Y,c(0.25,0.5,0.75))
median(Y) == quantile(Y,0.5)
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)  + geom_hline(yintercept = medianaY,aes(color = "blue"))
(dimRange = max(Y)-min(Y))
(range = c(min(Y),max(Y)))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
FreqRelCum[FreqRelCum$Pn>=0.75,"Y"][1] - FreqRelCum[FreqRelCum$Pn>=0.25,"Y"][1]
Sy_FIAT = c(0,1,2,3,4)   #Supporto di Y_FIAT ,
Sy_OPEL = c(0,1,2,3)
(FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3)))
# calcola le frequenze relative
(FreqFIAT = FreqFIAT %>% mutate(pi=fi/sum(fi)))
if (sum(FreqFIAT$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
# I DUE GRAFICI SONO ANALOGHI
ggplot(FreqFIAT) + geom_col(aes(nGuasti,pi,fill="red"))
# funzione per il calcolo delle frequenze cumulate assolute o relative
calcolaFreqCum = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+a[i-1])
}
return (a)
}
(FreqFIAT = FreqFIAT %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqFIAT = FreqFIAT %>% mutate(Pi=calcolaFreqCum(pi))    )
FreqOPEL = data.frame(nGuasti = c(0,1,2,3), fi = c(33,20,6,1))
# calcola le frequenze relative
FreqOPEL = FreqOPEL %>% mutate(pi=fi/sum(fi))
if (sum(FreqOPEL$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqOPEL) + geom_col(aes(nGuasti,fi,fill="red"))
(FreqOPEL = FreqOPEL  %>% mutate(Fi=calcolaFreqCum(fi))  )
(FreqOPEL = FreqOPEL  %>% mutate(Pi=calcolaFreqCum(pi))  )
(ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ])
(ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ][1])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ][1])
calcolaMedia = function(valori,frequenze){
somma =0
for (i in 1:length(valori)){
somma = somma + (valori[i]*frequenze[i])
}
return (somma)
}
(MediaFIAT = calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi))
(MediaOPEL = calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi))
calcolaVarianza = function(valori,frequenze,media){
somma = 0
for (i in 1:length(valori)){
somma = somma + (((valori[i]-media)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi,MediaFIAT))
(VarianzaOPEL = calcolaVarianza(FreqOPEL$nGuasti,FreqOPEL$fi,MediaOPEL))
abs(-1)
(sigmaFIAT = VarianzaFIAT**0.5)
(sigmaOPEL = VarianzaOPEL**0.5)
(CV_FIAT = sigmaFIAT / abs(MediaFIAT))
(CV_OPEL = sigmaOPEL / abs(MediaOPEL))
cut(1000:2500,c(1100,1200,1300,1400,1500,1800,2500))
cut(1000:2500,c(1100,1200))
FreqTable = data.frame(Low = c(1000,1100,1200,1300,1400,1500,1800),High= c(1100,1200,1300,1400,1500,1800,2500),fi = c(8,10,16,14,10,5,2))
(FreqTable = data.frame(Low = c(1000,1100,1200,1300,1400,1500,1800),High= c(1100,1200,1300,1400,1500,1800,2500),fi = c(8,10,16,14,10,5,2)))
(FreqTable = FreqTable %>% mutate(pi = fi/sum(fi)))
sum(FreqTable$pi)
(FreqTable = FreqTable %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqTable = FreqTable %>% mutate(Pi=calcolaFreqCum(pi))    )
ggplot(FreqTable) + geom_histogram(aes(Low,fi))
ggplot(FreqTable) + geom_histogram(aes(Low))
ggplot(FreqTable) + geom_col(aes(Low,fi))
ggplot(FreqTable) + geom_col(aes((High-Low),fi))
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi))
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi)) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi),width = (High-Low)) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi),width =(High-Low)) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi,width =(High-Low))) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi,width =(High-Low),color="red")) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable) + geom_line(aes((High+Low)/2,fi))
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_point()+geom_line()
toString(2,3)
"2"+"3"
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=paste(toString(Low),toString(Hig),sep="-"))+geom_line()
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=paste(toString(Low),toString(Hig),sep="-"))+geom_line()
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=paste(toString(Low),toString(Hig),sep="-")))+geom_line()
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=paste(toString(Low),toString(High),sep="-")))+geom_line()
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=(High+Low)/2  ))+geom_line()
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=(High+Low)/2  ))+geom_line()  + labs(x="Valori Centrali delle classi Reddito $",y="Frequenze assolute")
(ClasseMediana = FreqTable[FreqTable$Pi >= 0.5,c("Low","High")][1])
(ClasseMediana = FreqTable[FreqTable$Pi >= 0.5,c("Low","High")])
(ClasseMediana = FreqTable[FreqTable$Pi >= 0.5,c("Low","High")][1,])
(Yc = (FreqTable$Low+FreqTable$High)/2)
(MediaClassi = calcolaMedia(Yc,FreqTable$fi))
(MediaClassi = calcolaMedia(Yc,FreqTable$pi))
(MediaClassi = calcolaMedia(Yc,FreqTable$fi))
(MediaClassi = calcolaMedia(Yc,FreqTable$fi)/sum(FreqTable$fi))
(MediaClassi = calcolaMedia(Yc,FreqTable$pi))
