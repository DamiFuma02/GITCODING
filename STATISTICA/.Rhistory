(ClasseMediana = FreqTable[FreqTable$Pi >= 0.5,c("Low","High")][1,])
(Yc = (FreqTable$Low+FreqTable$High)/2)
(MediaClassi = calcolaMedia(Yc,FreqTable$pi))
(VarianzaClassi= calcolaVarianza(Yc,FreqTable$fi,MediaClassi))
(Tabella = data.frame(
Regione = 1:10,
Alcol = c(6.47,6.13,6.19,4.89,5.63,4.52,5.89,4.79,5.27,6.08),
Tabacco = c(4.03,3.76,3.77,3.34,3.47,2.92,3.2,2.71,3.53,4.51)
))
X = Tabella$Alcol
Y = Tabella$Tabacco
#V(Y) = E[ (Y-E(Y))^2] = E(Y^2) - (E(Y))^2
(X_Varianza= mean(X**2) - mean(X)**2)
#CovXY =  E(XY ) − E(X)E(Y )
(CovarianzaXY = mean(X*Y) - mean(X)*mean(Y))
#beta = CovXY / V(X)
(beta = CovarianzaXY / X_Varianza)
# alfa = E(Y) - beta*E(X)
(alfa = mean(Y) - beta*mean(X))
# Ys = Ystimata
(Ystimata = beta*X + alfa)
# E  = ErroriStimati
(ErroriStimati = Y - Ystimata)
(Ys_Varianza = mean(Ystimata**2) - mean(Ystimata)**2)          #E(Y^2) - (E(Y))^2
(Es_Varianza = mean(ErroriStimati**2) - mean(ErroriStimati)**2)          #E(Y^2) - (E(Y))^2
(Y_Varianza = mean(Y**2) - (mean(Y))**2)
Y_Varianza == Ys_Varianza + Es_Varianza
Ys_Varianza + Es_Varianza
(Ys_Varianza = mean(Ystimata**2) - mean(Ystimata)**2)          #E(Y^2) - (E(Y))^2
(Es_Varianza = mean(ErroriStimati**2) - mean(ErroriStimati)**2)          #E(Y^2) - (E(Y))^2
(Y_Varianza = mean(Y**2) - (mean(Y))**2)
Ys_Varianza + Es_Varianza
(RQuadro = Ys_Varianza / Y_Varianza)
(RQuadro = 1-(Es_Varianza / Y_Varianza))
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho = CovarianzaXY / X_Varianza)
(RQuadro)
(rho**2)
(RQuadro = Ys_Varianza / Y_Varianza)
(RQuadro = 1-(Es_Varianza / Y_Varianza))
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho = CovarianzaXY / X_Varianza)
(RQuadro)
(rho**2)
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho**2)
(rho = CovarianzaXY / X_Varianza)
(RQuadro)
(rho**2)
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho**2)
(rho = CovarianzaXY / X_Varianza)
(RQuadro)
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho = CovarianzaXY / (X_Varianza*Y_Varianza))
(rho**2)
(RQuadro)
(CovarianzaXY*sigmaX)/(X_Varianza*sigmaY)
(rho = beta*sigmaX/sigmaY)
(rho = (CovarianzaXY*sigmaX)/(X_Varianza*sigmaY))
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho = (CovarianzaXY*sigmaX)/(X_Varianza*sigmaY))
(rho**2)
(RQuadro)
ggplot(Tabella) + geom_abline(aes(alfa,beta))
ggplot(Tabella) + geom_abline(aes(Alcolo,Tabacco,intercept=alfa,slope=beta))
ggplot(Tabella) + geom_abline(aes(Alcol,Tabacco,intercept=alfa,slope=beta))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Tabacco)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Tabacco)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol)) + geom_line()
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Tabacco)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Tabacco-Ystimata)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Y-Ystimata)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_label(aes(label=Tabacco)) + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))  + geom_smooth(method = Tabacco ~ Alcol)
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))  + geom_smooth()
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta,color="green")) + geom_segment(aes(yend = Ystimata,xend=Alcol,color="red"))  + geom_smooth()
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol))  + geom_smooth()
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol))  + geom_smooth(se=FALSE)
ggplot(Tabella,aes(x=Alcol,y=Tabacco)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=Alcol))  + geom_smooth(se=FALSE)
(Tabella = data.frame(
Regione = 1:10,
Alcol = c(6.47,6.13,6.19,4.89,5.63,4.52,5.89,4.79,5.27,6.08),
Tabacco = c(4.03,3.76,3.77,3.34,3.47,2.92,3.2,2.71,3.53,4.51)
))
Y = Tabella$Alcol
X = Tabella$Tabacco
library("ggplot2")
library("dplyr")
library("ggplot2")
#vettore unidimensionale in quanto vi è un'unica variabile di riferimento
Y = c(138,164,150,132,144,125,149,157,146,158,140,147,136,148,152,144,168,126,138,176,163,119,154,165,146,173,142,147,135,153,140,135,161,145,135,142,150,156,145,128)
(n=length(Y)) #numero di osservazioni totali
# SUPPORTO DI Y
(Sy=unique(Y))
# frequenze assolute per ogni valore del supporto
Fy = table(Y)
# frequenze relative per ogni valore del supporto
Py = table(Y)/length(Y)
FreqTable = data.frame(table(Y))
data.frame(cumsum(table(Y)))
#frequenze relative cumulate
(FreqRelCum=   data.frame(Y=sort(Sy),Pn=cumsum(table(Y)/length(Y))))
# ecdf() funzione di ripartizione empirica
plot(ecdf(Y),main=" ",xlab="X = Lunghezza Foglia [mm]", ylab="Y = Frequenze Relative Cumulate Pn(x)")
classIntervals=c(118,128,138,148,158,168,178)
# tabella delle frequenze assolute per le classi di valori
table(cut(Y,classIntervals))
# frequenza assolute cumulate
cumFreqAss = cumsum(
table(cut(Y,classIntervals))
)
#tabella frequenze relative
table(
cut(Y , classIntervals )
)/length(Y)
# frequenze relative cumulate
cumsum(
table(cut(Y,classIntervals))/length(Y)
)
# crea l'istogramma impostando le basi dell'asse X come le classi definite in precedenza
hist(Y,classIntervals,xlab = "Lunghezza Foglia [mm]",ylab = "Frequenza assoluta")
moda = function(v){
tmp = unique(v)
Sy[which.max(tabulate(match(v,tmp)) )]
}
(modaY=moda(Y))
(medianaY = median(Y))
# frequenze relative cumulate
freqRelCum = cumsum(table(Y)/length(Y))
quantile(Y,c(0.25,0.5,0.75))
median(Y) == quantile(Y,0.5)
ggplot(data.frame(Y)) + geom_boxplot(aes(y=Y)) + geom_hline(yintercept = modaY)  + geom_hline(yintercept = medianaY,aes(color = "blue"))
(dimRange = max(Y)-min(Y))
(range = c(min(Y),max(Y)))
(Scy = quantile(Y,0.75)-quantile(Y,0.25))
FreqRelCum[FreqRelCum$Pn>=0.75,"Y"][1] - FreqRelCum[FreqRelCum$Pn>=0.25,"Y"][1]
Sy_FIAT = c(0,1,2,3,4)   #Supporto di Y_FIAT ,
Sy_OPEL = c(0,1,2,3)
(FreqFIAT = data.frame(nGuasti = c(0,1,2,3,4), fi = c(9,13,10,5,3)))
# calcola le frequenze relative
(FreqFIAT = FreqFIAT %>% mutate(pi=fi/sum(fi)))
if (sum(FreqFIAT$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqFIAT) + geom_col(aes(nGuasti,fi,fill="red"))
# I DUE GRAFICI SONO ANALOGHI
ggplot(FreqFIAT) + geom_col(aes(nGuasti,pi,fill="red"))
# funzione per il calcolo delle frequenze cumulate assolute o relative
calcolaFreqCum = function(arr){
a = c(arr[1])
for (i in 2:length(arr)){
a = append(a,arr[i]+a[i-1])
}
return (a)
}
(FreqFIAT = FreqFIAT %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqFIAT = FreqFIAT %>% mutate(Pi=calcolaFreqCum(pi))    )
FreqOPEL = data.frame(nGuasti = c(0,1,2,3), fi = c(33,20,6,1))
# calcola le frequenze relative
FreqOPEL = FreqOPEL %>% mutate(pi=fi/sum(fi))
if (sum(FreqOPEL$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
ggplot(FreqOPEL) + geom_col(aes(nGuasti,fi,fill="red"))
(FreqOPEL = FreqOPEL  %>% mutate(Fi=calcolaFreqCum(fi))  )
(FreqOPEL = FreqOPEL  %>% mutate(Pi=calcolaFreqCum(pi))  )
(ModaFIAT = FreqFIAT[FreqFIAT$fi == max(FreqFIAT$fi),"nGuasti" ])
(ModaOPEL = FreqOPEL[FreqOPEL$fi == max(FreqOPEL$fi),"nGuasti" ])
(MedianaFIAT = FreqFIAT[FreqFIAT$Pi >=0.5 ,"nGuasti" ][1])
(MedianaOPEL = FreqOPEL[FreqOPEL$Pi >=0.5 ,"nGuasti" ][1])
calcolaMedia = function(valori,frequenze){
somma =0
for (i in 1:length(valori)){
somma = somma + (valori[i]*frequenze[i])
}
return (somma)
}
(MediaFIAT = calcolaMedia(FreqFIAT$nGuasti,FreqFIAT$pi))
(MediaOPEL = calcolaMedia(FreqOPEL$nGuasti,FreqOPEL$pi))
calcolaVarianza = function(valori,frequenze,media){
somma = 0
for (i in 1:length(valori)){
somma = somma + (((valori[i]-media)**2) *frequenze[i])
}
return (1/sum(frequenze)*somma)
}
(VarianzaFIAT = calcolaVarianza(FreqFIAT$nGuasti,FreqFIAT$fi,MediaFIAT))
(VarianzaOPEL = calcolaVarianza(FreqOPEL$nGuasti,FreqOPEL$fi,MediaOPEL))
(sigmaFIAT = VarianzaFIAT**0.5)
(sigmaOPEL = VarianzaOPEL**0.5)
(CV_FIAT = sigmaFIAT / abs(MediaFIAT))
(CV_OPEL = sigmaOPEL / abs(MediaOPEL))
(FreqTable = data.frame(Low = c(1000,1100,1200,1300,1400,1500,1800),High= c(1100,1200,1300,1400,1500,1800,2500),fi = c(8,10,16,14,10,5,2)))
# calcolo frequenza relativa
(FreqTable = FreqTable %>% mutate(pi = fi/sum(fi)))
if (sum(FreqTable$pi) == 1){
print("LA SOMMA DELLE FREQUENZE RELATIVE CORRISPONDE AL 100%")
}
(FreqTable = FreqTable %>% mutate(Fi=calcolaFreqCum(fi))    )
(FreqTable = FreqTable %>% mutate(Pi=calcolaFreqCum(pi))    )
ggplot(FreqTable) + geom_col(aes((High+Low)/2,fi,width =(High-Low),color="red")) + labs(x="STIPENDIO $",y="Frequenza Assoluta")
ggplot(FreqTable,aes((High+Low)/2,fi)) + geom_label(aes(label=(High+Low)/2  ))+geom_line()  + labs(x="Valori Centrali delle classi Reddito $",y="Frequenze assolute")
(ClasseMediana = FreqTable[FreqTable$Pi >= 0.5,c("Low","High")][1,])
(Yc = (FreqTable$Low+FreqTable$High)/2)
(MediaClassi = calcolaMedia(Yc,FreqTable$pi))
(VarianzaClassi= calcolaVarianza(Yc,FreqTable$fi,MediaClassi))
(Tabella = data.frame(
Regione = 1:10,
Alcol = c(6.47,6.13,6.19,4.89,5.63,4.52,5.89,4.79,5.27,6.08),
Tabacco = c(4.03,3.76,3.77,3.34,3.47,2.92,3.2,2.71,3.53,4.51)
))
Y = Tabella$Alcol
X = Tabella$Tabacco
(X_Varianza= mean(X**2) - mean(X)**2)
(CovarianzaXY = mean(X*Y) - mean(X)*mean(Y))
(beta = CovarianzaXY / X_Varianza)
(alfa = mean(Y) - beta*mean(X))
# Ys = Ystimata
(Ystimata = beta*X + alfa)
# E  = ErroriStimati
(ErroriStimati = Y - Ystimata)
(Ys_Varianza = mean(Ystimata**2) - mean(Ystimata)**2)
(Es_Varianza = mean(ErroriStimati**2) - mean(ErroriStimati)**2)
(Y_Varianza = mean(Y**2) - (mean(Y))**2)
# ==
Ys_Varianza + Es_Varianza
(RQuadro = Ys_Varianza / Y_Varianza)
(RQuadro = 1-(Es_Varianza / Y_Varianza))
(sigmaX = X_Varianza**0.5)
(sigmaY = Y_Varianza**0.5)
(rho = beta*sigmaX/sigmaY)
(rho = (CovarianzaXY*sigmaX)/(X_Varianza*sigmaY))
(rho**2)
(RQuadro)
ggplot(Tabella,aes(x=X,y=Y)) +geom_point() + geom_abline(aes(intercept=alfa,slope=beta)) + geom_segment(aes(yend = Ystimata,xend=X))  + geom_smooth(se=FALSE)
(a = c(2,3,4 ))
binom.test(0,10,0.3)
install.packages("tipa")
library("tipa")
0.32*0.25+(1-0.32)*0.05
0.32*0.25
/0.114
0.32*0.25/0.114
0.4/0.528
0.15*0.03+0.35*0.09+0.5*0.13
0.5*0.13/0.101
0.2*37+0.2*0.5+0.2*5/9+0.2*0.6+0.2*7/11
0.2*3/7+0.2*0.5+0.2*5/9+0.2*0.6+0.2*7/11
0.2*3/7
(.2*3/7)/0.544
187/192
7/347
340/347
192/539
0.005*0.97/0.356
(0.005*0.97)/0.97
(0.005*0.97)/0.37
340/347
187/194
340/345
(0.005*0.964)/0.986
(0.005*0.964)/0.356
((1-0.005)*(1-0.986))/0.37
(194/539*0.964)/0.37
192/539
0.964*0.005/0.356
0.964*0.05/0.356
0.2*0.34+0.8*(1-0.86)
(0.2*0.34)/0.18
0.5+0.5+2*(0.25**2)
0.25**2
0.5+0.5+2*(0.0625)
0.5+2*(-0.25)+2*(-0.25**2)
0.5+0.5-2(0.625) - 0.5 +0.5 - 2*0.625
0.5+0.5-2*(0.625) - 0.5+0.5-2*(0.625)
0.5+0.5-2*(0.25)**2
0.5-0.5+2*(0.25)**2
0.875 - 0.125
(Omega = 1:6)
set.seed(11)
sample(Omega,1)
(Omega = 1:6)
set.seed(11)
sample(Omega,1)
sample(Omega,2)
sample(Omega,6)
sample(Omega,6,replace = TRUE)
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
(lancio=sample(Omega,1))
}
print("lancio finale:",lancio)
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
(lancio=sample(Omega,1))
}
print(paste("lancio finale:",lancio))
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
(lancio=sample(Omega,1))
}
print(paste("lancio finale:",lancio))
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
(lancio=sample(Omega,1))
}
print(paste("lancio finale:",lancio))
(lancio=sample(Omega,1,))
(lancio=sample(Omega,1))
while(lancio != 6){
(lancio=sample(Omega,1))
}
print(paste("lancio finale:",lancio))
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
lancio=sample(Omega,1)
lancio
}
print(paste("lancio finale:",lancio))
set.seed(11)
(lancio=sample(Omega,1))
while(lancio != 6){
lancio=sample(Omega,1)
print(lancio)
}
print(paste("lancio finale:",lancio))
sample(Omega,length(Omega))
Omega = 1:10
sample(Omega,length(Omega))
choose(5,1)
choose(5,2) # = 5!/2!3! = 5*4/2 = 10
choose(5,1)*choose(995,9)/choose(1000,10)
banca <- rbind(cbind(rep("cattivo",60),rep("si",60)),
cbind(rep("buono",520),rep("si",520)),
cbind(rep("cattivo",21),rep("no",21)),
cbind(rep("buono",609),rep("no",609)))
head(banca)
banca <- as.data.frame(banca)
head(banca)
colnames(banca) = c("tipo","cc")
head(banca)
banca$tipo<-ordered(banca$tipo, levels=c("cattivo","buono"))
banca$tipo<-ordered(banca$tipo, levels=c("cattivo","buono"))
head(banca)
banca
banca$cc<-factor(banca$cc, levels=c("si","no"))
banca
spec(banca)
str(banca)
# TABELLA DI CONTINGENZA
(tab = table(banca$cc, banca$tipo))
tab/sum(tab)
# distribuzione marginale di cc
margin.table(tab,1)
# relativa
margin.table(tab,1)/sum(margin.table(tab,1))
# distribuzione marginale di tipo
margin.table(tab,2)
# relativa
margin.table(tab,2)/sum(margin.table(tab,2))
# distribuzione marginale di cc
margin.table(tab,1)
# relativa
margin.table(tab,1)/sum(margin.table(tab,1))
# distribuzione marginale di tipo
margin.table(tab,2)
# relativa
margin.table(tab,2)/sum(margin.table(tab,2))
# distribuzione condizionata di "tipo|cc=si"
# (frequenza relativa condizionata)
tab[1,]/sum(tab[1,])
# distribuzione condizionata di "tipo|cc=no"
# (frequenza relativa condizionata)
# in alternativa, prop.table(tab,1)
tab[2,]/sum(tab[2,])
# probabilita' congiunta di "cc" e "tipo" in caso di indipendenza
prob_ind <- ccmarg%*%t(tipomarg)
# distribuzione marginale di cc
margin.table(tab,1)
# relativa
margin.table(tab,1)/sum(margin.table(tab,1))
# distribuzione marginale di tipo
margin.table(tab,2)
# relativa
margin.table(tab,2)/sum(margin.table(tab,2))
# distribuzione condizionata di "tipo|cc=si"
# (frequenza relativa condizionata)
tab[1,]/sum(tab[1,])
# distribuzione condizionata di "tipo|cc=no"
# (frequenza relativa condizionata)
# in alternativa, prop.table(tab,1)
tab[2,]/sum(tab[2,])
# distribuzione marginale di "cc"
ccmarg<-margin.table(tab,1)/sum(margin.table(tab,1))
# distribuzione marginale di "tipo"
tipomarg<-margin.table(tab,2)/sum(margin.table(tab,2))
# probabilita' congiunta di "cc" e "tipo" in caso di indipendenza
prob_ind <- ccmarg%*%t(tipomarg)
0.5**2
0.5**2
0.5**3
-(-0.5)**2-4*(-0.5)**3/3
-(-0.5)**2+4*(-0.5)**3/3
(0.5)**2-4*(0.5)**3/3
0.5**2/2
0.5**2
-(-0.5)**2
-0.25*(2-2)
2/3*(-0.5)**3+(-0.5)**4
2/3*(0.5)**3-(0.5)**4
0.0208*2
choose(15,10)
3003/factorial(15)
3003*0.5**10*(0.5)**5
choose(15,5)*0.5**10*(0.5)**5
0.5**10
choose(10,1)*0.5**1*0.5*9
choose(15,10)*0.5**10*0.5**5
choose(15,10)*(0.5**10)*(0.5**5)
knitr::opts_chunk$set(echo = TRUE)
PX10 = choose(15,10)*0.5**10*0.5**5
for (i in 10:15){
PXmag10 = PXmag10+(choose(15,i)*0.5**i*0.5**(15-i))
}
for (i in 10:15){
PXmag10 = PXmag10+(choose(15,i)*0.5**i*0.5**(15-i))
}
PXmag10 = PXmag10+(choose(15,i)*(0.5**i)*(0.5**(15-i)))
PXmag10=0
for (i in 10:15){
PXmag10 = PXmag10+(choose(15,i)*(0.5**i)*(0.5**(15-i)))
}
PXmag10
16/25
choose(4,3)*(1/5)**3*(1-1/5)**1
choose(4,0)
(1-1/5)**4
0.25*exp(-0.25)
1-exp(-0.25)
exp(-0.25)
0.25*exp(-0.25)
knitr::opts_chunk$set(echo = TRUE)
sum = 0
for (i in 0:5){
sum = sum + (0.25)**i*exp(-0.25)/factorial(i)
}
sum
for (i in 0:5){
print(i)
}
sum = 0
for (i in 0:5){
print(i)
sum = sum + ((0.25)**i)*exp(-0.25)/factorial(i)
}
sum
sum = 0
for (i in 0:4){
print(i)
sum = sum + ((0.25)**i)*exp(-0.25)/factorial(i)
}
sum
sum = 0
for (i in 0:4){
print(i)
sum = sum + ((0.25)**i)*exp(-0.25)/factorial(i)
}
sum
i=1
((0.25)**i)*exp(-0.25)/factorial(i)
i=5
((0.25)**i)*exp(-0.25)/factorial(i)
i=0
((0.25)**i)*exp(-0.25)/factorial(i)
i=1
((0.25)**i)*exp(-0.25)/factorial(i)
1.58-0.05
1.53/sqrt(1.1)
-1.23-0.05
-1.28/sqrt(1.1)
1-0.1112
-2-0.05
-2.05/sqrt(1.1)
1.5-0.05
1.45/sqrt(1.1)
0.9162  - 0.0256
-0.67*sqrt(1.1)+0.05
-1.96*sqrt(1.1)+0.05
1-0.025
1.97*sqrt(1.1)+0.05
1-(1-exp(-0.25*3))
1-(1-exp(-0.5*3))
