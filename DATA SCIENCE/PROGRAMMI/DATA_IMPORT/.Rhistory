install.packages("tibbles")
Sys.which("make")
install.packages("tibbles")
library(tibbles)
library(tibble)
install.packages("tibble")
install.packages("tibble")
(prova = tibble(x = 1:5,
y = 2,
z = 2*x + y
))
prova
# it never changes the names of variables
tibble(a = 1:10, b = 11:20)
tibble(a = 1:10, b = 11:20)
data.frame(a = 1:10, b = 11:20)
names(tibble("crazy name" = 1))
names(prova) = c("nome", "cognome", "via")
prova
names(tibble("crazy name" = 1))
tb = tibble(abc = 1:10)
tb
tb$abc
tb$a
library(readr)
read_csv("./prova.csv")
read_csv("./prova.csv", show_col_types = FALSE)
file = read_csv("The first line
The second Line
x,y,z
1,2,3")
file = read_csv("The first line
The second Line
x,y,z")
file = read_csv("The first line
The second Line
x,y,z")
file = read_csv("The first line
The second Line
x,y,z", show_col_types = FALSE)
file
file = read_csv("The first line
The second Line
x,y,z", show_col_types = FALSE, skip = 2)
file
file = read_csv("The first line
The second Line
x,y,z", show_col_types = FALSE, skip = 1)
problems()
# install.packages("tibble")
# per caricare la libreria
library(tibble)
(matrice = matrix(data = list(x=1:5,
y = 2L,
z = 2*x + y
),
ncol = 3
))
list(x=1:5,
y = 2L,
z = 2*x + y
)
data.frame("crazy name" = 1)
data.frame("crazy name" = 1)
tibble("crazy name" = 1)
tibble("crazy name" = 1)
A = tibble("crazy name" = 1)
names(A)
names(data.frame("crazy name" = 1))
names(data.frame("crazy name" = 1))
tb = tibble(abc = 1:10)
names(A) = "pippo"
A
tibble(a = 1:10, a = 11:20)
data.frame(a = 1:10, a = 11:20)
df = data.frame(abc = 1:10)
df
tb = tibble(abc = 1:10)
tb
# NON CAPISCE IL NOME DA STAMPARE
tb$a
df$a
df
df[1]
df[2]
df[,1]
df[1,]
df[1]
tb
tb[1]
tb[,1]
tb[1,]
# install.packages("readr")
library(readr)
update.packages(readr)
update.packages("readr")
library(readr)
(F1 = read_csv(./File.csv, delim = ",")
)
(F1 = read_csv(./File.csv, delim = ","))
(F1 = read_csv(./File.csv))
(F1 = read_csv("./File.csv"))
(F1 = spec(read_csv("./File.csv")))
F1
(F1 = read_csv("./File.csv", col_names = TRUE ))
view(heights)
# dataframe contenente le altezze di un set di persone
(heights = read_csv("http://users.dimi.uniud.it/~massimo.franceschet/ns/plugandplay/import/heights.csv"))
view(heights)
# APRE IL DATAFRAME
view(heights)
read_csv("The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2)
(X = read_csv("The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2))
view(X)
URL = "http://lib.stat.cmu.edu/datasets/wseries"
(world_series = scan(URL, skip = 35, nlines = 23, what = list(1L, "")))
# order(matriceAnni)
(perm = sort(matriceAnni))
(matriceAnni = world_series[[1]])
# order(matriceAnni)
(perm = sort(matriceAnni))
world_series[,perm]
names(world_series) = c("year", "results")
world_series[$year = perm]
world_series[year = perm]
world_series[world_seriesyear == perm]
world_series[world_series$year == perm]
world_series$year
world_series[year == perm]
world_series["year" == perm]
a = world_series["year" == perm]
a
world_series[perm]
world_series["year" == perm]
world_series[perm[1,1]]
perm[1,1]
perm
dim(perm)
length(perm)
world_series["year" = perm[1]]
world_series["year" == perm[1]]
world_series[world_series$year == perm[1]]
world_series$year == perm[1]
world_series[world_series$year == perm[1], "result"]
world_series[world_series$year == perm[1]]
(expr = world_series$year == perm[1])
world_series[expr]
world_series[[2]]
world_series[[2]][expr]
world_series[[2]][perm]
(perm = sort(matriceAnni))
world_series[[2]]
world_series[[2]][1]
world_series[[2]][world_series$year == perm]
world_series[world_series$year == perm]
world_series[world_series$year == perm,]
data.frame(world_series)
world_series
he = data.frame(world_series)
he[he$year == perm]
?scan
(fileScan = scan("./file2.csv"))
(fileScan = scan("./file2.csv", col_names = TRUE))
(fileScan = scan("./file2.csv", what = list("","",1L)))
(fileScan = scan("./file2.csv", what = list("","",1L), skip = 1))
# install.packages("tibble")
# per caricare la libreria
update.packages("readr")
library(tibble)
(fileScan = scan("./file2.csv", what = list("","",1), skip = 1))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0))))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1))
URL = "http://lib.stat.cmu.edu/datasets/wseries"
(world_series = scan(URL, skip = 35, nlines = 23, what = list(1L, "")))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1, nlins = 1))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1, nlines = 1))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1, sep=","))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1, sep=","))
(fileScan = scan("./file2.csv", what = list(name = character(0), surname = character(0), age = integer(0)), skip = 1, sep=","))
typeof(fileScan)
(ageVector = fileScan$age)
DF = data.frame(fileScan$name, fileScan$surname, fileScan$age, colnames("nome", "cognome","eta"))
DF = data.frame(fileScan$name, fileScan$surname, fileScan$age)
(DF = data.frame(fileScan$name, fileScan$surname, fileScan$age))
names(DF) = c("Nome", "Cognome", "Eta")
DF
DF[indiciOrdinati,]
(indiciOrdinati = order(ageVector))
DF[indiciOrdinati,]
tinytex::install_tinytex()
library(tidyr)
table1
(table1 = rbind(table1, relative = table1[,3]+table1[,4]))
table1[,3]+table1[,4]
(table1 = cbind(table1, relative = table1[,3]+table1[,4]))
table4a
gather(table4a,"1999", "2000",  key = "year", value = "cases")
pivot_longer(table4a, c("1999", "2000"), names_to = "year", values_to = "case")
library(dplyr)
pivot_wider(table2, names_from = type, values_from = count)
table2
table3
table5
table5
getwd()
library(readr)
update.packages(readr)
update.packages("readr")
(URL = getwd()+"/BATMAN/batman.csv")
paste("A", 1:6, sep = "")
paste(getwd(), "BATMAN/batman.csv", sep = "/")
(URL = getwd()+)
(URL = paste(getwd(), "BATMAN/batman.csv", sep = "/"))
file = read_csv(URL, col_names = TRUE)
dim(file)
# VISUALIZZA I TIPI DI DATO DELLE COLONNE
spec(file)
file$`Imdb Votes`
file$`Imdb Rating`
typeof(file$`Imdb Votes`)
a = file$`Imdb Rating`
typeof(a)
b = file$`Imdb Rating`
typeof(b)
b = file$`Imdb Votes`
typeof(b)
file[1,]
names(file)
typeof(names(file))
view(file)
View(file)
file$`Imdb Votes`
typeof(file$`Imdb Votes`)
file$`Imdb Rating`
typeof(file$`Imdb Rating`)
# VISUALIZZA I TIPI DI DATO DELLE COLONNE
spec(file)
double(0)
integer(0)
file = read_csv(URL, col_names = TRUE, col_types = list(d,c,c,c,c,c,c,c,c,c, d, d, c, d))
# VISUALIZZA I TIPI DI DATO DELLE COLONNE
spec(file)
file = read_csv(URL, col_names = TRUE, col_types = list(year = d,title = c,rated  = c,director = c,released = c,writer = c,prod = c,actors = c,runtime = c,awards = c, votes = d, rating = d,score =c, metascore = d))
file = read_csv(URL, col_names = TRUE, col_types = list(year = "d",title = "c",rated  = "c",director = "c",released = "c",writer = "c",prod = "c",actors = "c",runtime = "c",awards = "c", votes = "d", rating = "d",score ="c", metascore = "d"))
file = read_csv(URL, col_names = TRUE)
library(readr)
(URL = paste(getwd(), "BATMAN/batman.csv", sep = "/"))
file = read_csv(URL, col_names = TRUE)
dim(file)
file[,13]
file[,14]
file[,13]
strtoi("123", base = 10L)
substr("CIAO", 0,3)
substr("CIAO", 1,3)
substr("CIAO", 1,2)
"CIAO"[1]
"CIAO"[1,]
"CIAO"[,1]
length(file[,13])
length("CIAO")
lengths(A[,13])
lengths(file[,13])
dim(file)
RottenScore = file[,13]
RottenScore
RottenScore[1]
RottenScore[1,]
length(RottenScore[1,])
RottenScore[1,]
RottenScore[1,][1]
RottenScore[1,][[1]]
RottenScore[1,][[1]]
RottenScore[1,][[2]]
length(RottenScore[2,][[1]])
RottenScore[2,][[1]]
length(RottenScore[2,][[1]])
length(RottenScore[2,][[1]][1])
RottenScore[2,][[1]]
RottenScore[2,][[1]][1]
RottenScore[2,][[1]][[1]]
length(RottenScore[2,][[1]][[1]])
nchar("CIAO")
length(RottenScore)
dim(RottenScore)
RottenScore = matrix(data = file[,13], nrow = 1)
RottenScore
RottenScore
file[,13]
file[,13]
file[,13][[1]]
valori  = file[,13][[1]]
valori
valori = strtoi(substr(valori, 0, nchar(valori)),base = 1L)
substr(valori, 0, nchar(valori)),base = 1L)
substr(valori, 0, nchar(valori))
substr(valori, 0, nchar(valori)-1)
valori = strtoi(substr(valori, 0, nchar(valori)-1),base = 1L)
valori = strtoi(substr(valori, 0, nchar(valori)-1), base = 0L)
valori
(file[,13] = valori)
spec(file)
file
View(file)
file[,13] = valori
file = file
file
library("nycflights13")
update.packages("nycflights13")
library("nycflights13")
nycflights13_sqlite(path = NULL)
nycflights13
library(dplyr)
nycflights13
library(dplyr)
flights
View(flights)
View(planes)
View(plane)
View(planes)
View(planes.select("year"))
planes.select("year")
planes.all_of("year")
all_of(planes)
all_of(planes$year)
select(planes, "year")
filter(planes, year>1934)
filter(planes, year<1934)
