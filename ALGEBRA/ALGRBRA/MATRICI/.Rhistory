(A = matrix(data = c(0,7,1,2,0,4), nrow = 2, byrow = TRUE))
(B = matrix(data = c(1,-6,0,-3,0,-2), nrow = 2, byrow = TRUE))
(C = matrix(data = c(-1,-1,1,0,0,-5), ncol = 2, byrow = TRUE))
(D = matrix(data = c(-1,1,0), ncol = 1, byrow = TRUE))
(E = (A - (2*B) ) %*% C)
2*B
(A = matrix(data = 1:9, nrow=3))
(A ^ 2)
(A * A)
(A = matrix(data = 1:9, nrow=3, byrow=TRUE))
(A ^ 2)
(A %*% A)
(A ^ 3)
(A = matrix(data = c(0,7,1,3,2,0,4,1,0,-1,4,2,1,0,-2,-5), nrow=4, byrow=TRUE))
(vRiga = c(1,0,0,0))
(vRiga %*% A)
a = matrix(data = c(0,2,0,1), ncol=1)
b = matrix(data = c(0,0,0,-2), ncol=1)
a * b
a %*% b
A * b
A %*% b
M = matrix(c(
c(1200, 1190, 1100, 1120, 890),
c(6200, 6690, 6700, 7120, 7150),
c(8900, 8790, 8760, 8800, 9010),
c(3300, 3490, 3660, 4300, 4510),
c(2190, 2000, 1890, 1740, 1500)), ncol = 5
)
rownames(M) = 2014:2018
colnames(M) = LETTERS[1:5]
(M)
barplot(M[1,])
barplot(M, legend=TRUE)
barplot(M, legend=TRUE, beside=TRUE)
rownames(M) = c("nome1", "nome2", "nome3", "nome4", "nome5")
barplot(M, legend=TRUE, beside=TRUE)
n = rnorm(1000)
(n = rnorm(1000))
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
rug(n)
hist(n, main = "Primo ISTOGRAMMA")
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
rug(n)
barplot(M, legend=TRUE, beside=TRUE)
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
barplot(M, legend=TRUE, beside=TRUE)
(n = rnorm(1000, mean=77))  #1000 numeri casuali
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
rug(n)
(n = rnorm(1000, mean=77, sd=10))  #1000 numeri casuali
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
(n = rnorm(10000, mean=77, sd=10))  #1000 numeri casuali
hist(n, probability = TRUE, main = "Primo ISTOGRAMMA")
density(n)
plot(density(n))
boxplot(n, range=0)
(n = rnorm(10000, mean=0, sd=10))  #1000 numeri casuali
boxplot(n, range=0)
(n = rnorm(10000, mean=0))  #1000 numeri casuali
boxplot(n, range=0)
boxplot(n, range=1,5)
boxplot(n, range=0)
boxplot(n, range=1,5)
boxplot(n, range=1.5)
Library(readr)
library(tibble)
x = as_tibble(iris)
view(x)
read_csv("PRIMA LINEA
SECONCA LINEA
x,y,z
1,2,3")
?read.csv
?read_csv
read.csv("PRIMA LINEA
SECONCA LINEA
x,y,z
1,2,3")
read.csv("PRIMA LINEA
SECONDA LINEA
x,y,z
1,2,3", skip = 2)
install.packages("readr")
install.packages("tibble")
install.packages("tibble")
source("C:/LOCAL_REPO/Nuova cartella/DATA SCIENCE/PROGRAMMI/DataImport.R", echo=TRUE)
read.csv("PRIMA LINEA
SECONDA LINEA
x,y,z
1,2,3", skip = 2)
read.csv("PRIMA LINEA
SECONDA LINEA
x,y,z
1,2,3", skip = 2)
read.csv("x,y,z
1,2,3", skip = 2)
read.csv("ciaociao", comment= "#")
read_csv("ciaociao", comment= "#")
library(readr)
read_csv("ciaociao", comment= "#")
library(readr)
read_csv("ciaociao", comment= "#")
read.csv("x,y,z
1,2,3", skip = 2)
install.packages("readr")
install.packages("readr")
install.packages("Rtools")
library(readr)
read_csv("ciaociao", comment= "#")
heights = read_csv("http://users.dimi.uniud.it/~massimo.franceschet/ns/plugandplay/import/heights.csv")
heights
write_rds(heights)
write_rds(heights, "file.rds")
file = read_rds("file.rds")
file
world_series = scan("http://lib.stat.cmu.edu/datasets/wseries",
skip = 35, # - Skip the first 35 lines
nlines = 23, # - Then read 23 lines of data
what = c("numeric, characters")) # - The data occurs in pairs: a year (numeric) and a pattern (character)
world_series
world_series = scan("http://lib.stat.cmu.edu/datasets/wseries",
skip = 35, # - Skip the first 35 lines
nlines = 23, # - Then read 23 lines of data
what = list) # - The data occurs in pairs: a year (numeric) and a pattern (character)
world_series = scan("http://lib.stat.cmu.edu/datasets/wseries",
skip = 35, # - Skip the first 35 lines
nlines = 23, # - Then read 23 lines of data
what = "list") # - The data occurs in pairs: a year (numeric) and a pattern (character)
world_series
world_series = scan("http://lib.stat.cmu.edu/datasets/wseries",
skip = 35, # - Skip the first 35 lines
nlines = 23, # - Then read 23 lines of data
what = list("numeric", "characters")) # - The data occurs in pairs: a year (numeric) and a pattern (character)
world_series
world_series[1]
world_series[[1]]
world_series = scan("http://lib.stat.cmu.edu/datasets/wseries",
skip = 35, # - Skip the first 35 lines
nlines = 23, # - Then read 23 lines of data
what = "list") # - The data occurs in pairs: a year (numeric) and a pattern (character)
perm = order(world_series[[1]])
perm
